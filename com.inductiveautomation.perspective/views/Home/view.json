{
  "custom": {},
  "params": {},
  "props": {
    "defaultSize": {
      "width": 801
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\timport urllib2\n\timport json\n\t\n\t# Define the URL and bearer token\n\turl \u003d \u0027http://localhost:3000/api/users\u0027\n\tbearer_token \u003d \u0027eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjbHQzanVveTcwMDAwdXI5ZjRjZzhvbGlwIiwidXNlcm5hbWUiOiJhZG1pbiIsImlhdCI6MTcwOTIyNjUxOSwiZXhwIjoxNzA5Mzk5MzE5fQ.ZP2SYn7TafQDWRYf3WAgCFq3C26xfakuh2jXuXJJ4FweyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjbHQzanVveTcwMDAwdXI5ZjRjZzhvbGlwIiwidXNlcm5hbWUiOiJhZG1pbiIsImlhdCI6MTcwOTIzNTc5NywiZXhwIjoxNzA5NDA4NTk3fQ.AD4gzWmHEqqvC_RbOQnOeHarG94vxkXpufh3qHx3xtk\u0027\n\t\n\t# Create a request object with the bearer token\n\trequest \u003d urllib2.Request(url)\n\trequest.add_header(\u0027Authorization\u0027, \u0027Bearer \u0027 + bearer_token)\n\t\n\ttry:\n\t    # Send the request and get the response\n\t    response \u003d urllib2.urlopen(request)\n\t    \n\t    # Read the response data and parse JSON\n\t    response_data \u003d response.read()\n\t    print(response_data)\n\t    users \u003d json.loads(response_data)\n\t    \n\t    # Process the user data\n\t    # Adding it to the default tag provider\n\t    system.tag.write(\"[default]user_json\", users)\n\t    for user in users:\n\t        print(\"User ID:\", user[\u0027id\u0027])\n\t        print(\"Username:\", user[\u0027username\u0027])\n\t        print(\"Email:\", user[\u0027email\u0027])\n\t   \n\t    \n\texcept urllib2.HTTPError as e:\n\t    print(\"HTTP Error:\", e.code)\n\t    # Handle HTTP errors\n\texcept urllib2.URLError as e:\n\t    print(\"URL Error:\", e.reason)\n\t    # Handle URL errors\n\texcept Exception as e:\n\t    print(\"Error:\", e)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Table"
        },
        "position": {
          "height": 400,
          "width": 402,
          "x": 81.5,
          "y": 200
        },
        "propConfig": {
          "props.data": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "direct",
                "tagPath": "[default]docType"
              },
              "transforms": [
                {
                  "expression": "{value}",
                  "type": "expression"
                },
                {
                  "code": "\t    array \u003d value[\"userArray\"]\n\t    return array",
                  "type": "script"
                }
              ],
              "type": "tag"
            }
          }
        },
        "props": {
          "selection": {
            "data": [
              {
                "column_1": "role",
                "column_2": "userName"
              }
            ],
            "selectedRow": 1
          }
        },
        "type": "ia.display.table"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tuser \u003d self.getSibling(\"userNameField\").props.text\n\trole \u003d self.getSibling(\"roleField\").props.text\n\tpayloadData \u003d {\"userName\":user,\"role\":role}\n\tsystem.util.sendMessage(\"micheals-first-ignition-integration\", \"userCreated\", {\"message\":payloadData}, \"S\")"
              },
              "scope": "G",
              "type": "script"
            }
          },
          "dom": {
            "onClick": {
              "config": {
                "script": "    # Get the tag path\n#    tagPath \u003d \"[default]userNameTag\"  # replace \"YourTagName\" with your actual tag name\n\n    # Read the tag value\n#    userName \u003d system.tag.read(tagPath).value\n\n#    print(userName)\n\n\tuser \u003d self.getSibling(\"userNameField\").props.text\n\tprint(user)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "createUser"
        },
        "position": {
          "height": 34,
          "width": 131,
          "x": 573,
          "y": 366
        },
        "props": {
          "text": "Create User"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "userNameField"
        },
        "position": {
          "height": 32,
          "width": 150,
          "x": 564,
          "y": 215
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "bidirectional": true,
                "fallbackDelay": 2.5,
                "mode": "direct",
                "tagPath": "[default]userNameTag"
              },
              "type": "tag"
            }
          }
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "roleField"
        },
        "position": {
          "height": 32,
          "width": 150,
          "x": 564,
          "y": 295
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "bidirectional": true,
                "fallbackDelay": 2.5,
                "mode": "direct",
                "tagPath": "[default]roleTag"
              },
              "type": "tag"
            }
          }
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "height": 32,
          "width": 146,
          "x": 566,
          "y": 184
        },
        "props": {
          "text": "User Name"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Label_0"
        },
        "position": {
          "height": 32,
          "width": 146,
          "x": 566,
          "y": 263
        },
        "props": {
          "text": "Role"
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "type": "ia.container.coord"
  }
}